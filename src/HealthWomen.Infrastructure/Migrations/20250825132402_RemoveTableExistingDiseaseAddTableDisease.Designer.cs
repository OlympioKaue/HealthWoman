// <auto-generated />
using HealthWomen.Infrastructure.DataAcess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthWoman.Infrastructure.Migrations
{
    [DbContext(typeof(HealthWomenDbContext))]
    [Migration("20250825132402_RemoveTableExistingDiseaseAddTableDisease")]
    partial class RemoveTableExistingDiseaseAddTableDisease
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("HealthWoman.Domain.Entities.AwarenessMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("MonthName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("awarenessMonths");
                });

            modelBuilder.Entity("HealthWoman.Domain.Entities.Diseases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DiseaseName")
                        .HasColumnType("longtext");

                    b.Property<int>("WomanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WomanId");

                    b.ToTable("diseases");
                });

            modelBuilder.Entity("HealthWoman.Domain.Entities.HealthQuestions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeGroup")
                        .HasColumnType("longtext");

                    b.Property<string>("QuestionText")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("healthQuestions");
                });

            modelBuilder.Entity("HealthWoman.Domain.Entities.Woman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("ContainsExistingDisease")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("WomanName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("woman");
                });

            modelBuilder.Entity("HealthWoman.Domain.Entities.Diseases", b =>
                {
                    b.HasOne("HealthWoman.Domain.Entities.Woman", "Woman")
                        .WithMany("Diseases")
                        .HasForeignKey("WomanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Woman");
                });

            modelBuilder.Entity("HealthWoman.Domain.Entities.Woman", b =>
                {
                    b.Navigation("Diseases");
                });
#pragma warning restore 612, 618
        }
    }
}
